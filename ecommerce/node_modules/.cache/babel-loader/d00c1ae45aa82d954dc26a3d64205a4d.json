{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ihsan\\\\Lektionen\\\\6. JavaScript 3\\\\Grupp uppgift\\\\GruppC\\\\ecommerce\\\\src\\\\Views\\\\LoginView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport LoginForm from '../components/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginView = () => {\n  _s();\n\n  const adminUser = {\n    email: \"admin@admin.com\",\n    password: \"admin123\"\n  }; // This where we get our user data. Once we've logged in this data is gonna be set.\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\"\n  }); // Error string because what the error is gonna to is to catch if or not our details are correct. It has a message in there to dislay\n\n  const [error, setError] = useState(\"\"); //This function is going to be called when we're to log in.\n  //We're gonna pass through details to this actual login method\n\n  const Login = details => {\n    console.log(details);\n\n    if (details.email === adminUser.email && details.password === adminUser.password) {\n      console.log(\"Admin is logged in\");\n      setUser({\n        name: details.name,\n        email: details.email\n      });\n    } else {\n      console.log(\"Details do not match!\");\n      setError(\"You've just entered incorrect information!\");\n    } //Later, we'll be setting our user or our error. For now we just console.log this.\n\n  }; //We're gonna need also a logout function:\n\n\n  const Logout = () => {\n    setUser({\n      name: \"\",\n      email: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.email !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Logout,\n        className: \"btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      Login: Login,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginView, \"9PYKtoRracA+mmiiL7BCJ+FLtw4=\");\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"names":["React","useState","LoginForm","LoginView","adminUser","email","password","user","setUser","name","error","setError","Login","details","console","log","Logout"],"sources":["C:/Users/ihsan/Lektionen/6. JavaScript 3/Grupp uppgift/GruppC/ecommerce/src/Views/LoginView.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LoginForm from '../components/LoginForm'\r\n\r\n\r\nconst LoginView = () => {\r\n\r\n  const adminUser = {\r\n    email: \"admin@admin.com\",\r\n    password: \"admin123\"\r\n  }\r\n  // This where we get our user data. Once we've logged in this data is gonna be set.\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\"\r\n  });\r\n  // Error string because what the error is gonna to is to catch if or not our details are correct. It has a message in there to dislay\r\n  const [error, setError] = useState(\"\");\r\n\r\n  //This function is going to be called when we're to log in.\r\n  //We're gonna pass through details to this actual login method\r\n  const Login = details => {\r\n    console.log(details); \r\n\r\n    if (details.email === adminUser.email && details.password === adminUser.password) {\r\n      console.log (\"Admin is logged in\");\r\n      setUser({\r\n        name: details.name,\r\n        email: details.email\r\n      })\r\n    } else {\r\n      console.log(\"Details do not match!\");\r\n      setError(\"You've just entered incorrect information!\")\r\n    }\r\n    //Later, we'll be setting our user or our error. For now we just console.log this.\r\n  }\r\n\r\n  //We're gonna need also a logout function:\r\n  const Logout = () => {\r\n    setUser({\r\n      name: \"\",\r\n      email: \"\"\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {(user.email !== \"\")\r\n      ? (\r\n        <div className=\"welcome\">\r\n          <h2>Welcome, <span>{user.name}</span></h2>\r\n          <button onClick={Logout} className=\"btn\">Logout</button>\r\n        </div>\r\n      ) : (\r\n        <LoginForm Login={Login} error={error} />\r\n      )}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginView\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAGA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEtB,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAE,iBADS;IAEhBC,QAAQ,EAAE;EAFM,CAAlB,CAFsB,CAMtB;;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;IAC/BQ,IAAI,EAAE,EADyB;IAE/BJ,KAAK,EAAE;EAFwB,CAAD,CAAhC,CAPsB,CAWtB;;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CAZsB,CActB;EACA;;EACA,MAAMW,KAAK,GAAGC,OAAO,IAAI;IACvBC,OAAO,CAACC,GAAR,CAAYF,OAAZ;;IAEA,IAAIA,OAAO,CAACR,KAAR,KAAkBD,SAAS,CAACC,KAA5B,IAAqCQ,OAAO,CAACP,QAAR,KAAqBF,SAAS,CAACE,QAAxE,EAAkF;MAChFQ,OAAO,CAACC,GAAR,CAAa,oBAAb;MACAP,OAAO,CAAC;QACNC,IAAI,EAAEI,OAAO,CAACJ,IADR;QAENJ,KAAK,EAAEQ,OAAO,CAACR;MAFT,CAAD,CAAP;IAID,CAND,MAMO;MACLS,OAAO,CAACC,GAAR,CAAY,uBAAZ;MACAJ,QAAQ,CAAC,4CAAD,CAAR;IACD,CAZsB,CAavB;;EACD,CAdD,CAhBsB,CAgCtB;;;EACA,MAAMK,MAAM,GAAG,MAAM;IACnBR,OAAO,CAAC;MACNC,IAAI,EAAE,EADA;MAENJ,KAAK,EAAE;IAFD,CAAD,CAAP;EAID,CALD;;EAQA,oBACE;IAAA,UACIE,IAAI,CAACF,KAAL,KAAe,EAAhB,gBAEC;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAA,qCAAa;UAAA,UAAOE,IAAI,CAACE;QAAZ;UAAA;UAAA;UAAA;QAAA,QAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEO,MAAjB;QAAyB,SAAS,EAAC,KAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,gBAOC,QAAC,SAAD;MAAW,KAAK,EAAEJ,KAAlB;MAAyB,KAAK,EAAEF;IAAhC;MAAA;MAAA;MAAA;IAAA;EARJ,iBADF;AAcD,CAvDD;;GAAMP,S;;KAAAA,S;AAyDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}
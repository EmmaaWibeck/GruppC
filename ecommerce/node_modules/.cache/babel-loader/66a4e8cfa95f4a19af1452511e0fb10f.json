{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ihsan\\\\Lektionen\\\\6. JavaScript 3\\\\Grupp uppgift\\\\GruppC\\\\ecommerce\\\\src\\\\Views\\\\LoginView.jsx\";\nimport React, { useState } from 'react'; // import React from 'react';\n\nimport LoginForm from '../components/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst adminUser = {\n  email: \"admin@admin.com\",\n  password: \"admin123\"\n}; // This where we get our user data. Once we've logged in this data is gonna be set.\n\nconst [user, setUser] = useState({\n  name: \"\",\n  email: \"\"\n}); // Error string because what the error is gonna to is to catch if or not our details are correct. It has a message in there to dislay\n\nconst [error, setError] = useState(\"\"); //This function is going to be called when we're to log in.\n//We're gonna pass through details to this actual login method\n\nconst Login = details => {\n  console.log(details);\n\n  if (details.email === adminUser.email && details.password === adminUser.password) {\n    console.log(\"Admin is logged in\");\n    setUser({\n      name: details.name,\n      email: details.email\n    });\n  } else {\n    console.log(\"Details do not match!\");\n    setError(\"Details do not match!\");\n  } //Later, we'll be setting our user or our error. For now we just console.log this.\n\n}; //We're gonna need also a logout function:\n\n\n_c = Login;\n\nconst Logout = () => {\n  setUser({\n    name: \"\",\n    email: \"\"\n  });\n};\n\n_c2 = Logout;\n\nconst LoginView = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), user.email !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Logout,\n        className: \"btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      Login: Login,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = LoginView;\nexport default LoginView;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Logout\");\n$RefreshReg$(_c3, \"LoginView\");","map":{"version":3,"names":["React","useState","LoginForm","adminUser","email","password","user","setUser","name","error","setError","Login","details","console","log","Logout","LoginView"],"sources":["C:/Users/ihsan/Lektionen/6. JavaScript 3/Grupp uppgift/GruppC/ecommerce/src/Views/LoginView.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import React from 'react';\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nconst adminUser = {\r\n  email: \"admin@admin.com\",\r\n  password: \"admin123\"\r\n}\r\n// This where we get our user data. Once we've logged in this data is gonna be set.\r\nconst [user, setUser] = useState({\r\n  name: \"\",\r\n  email: \"\"\r\n});\r\n// Error string because what the error is gonna to is to catch if or not our details are correct. It has a message in there to dislay\r\nconst [error, setError] = useState(\"\");\r\n\r\n//This function is going to be called when we're to log in.\r\n//We're gonna pass through details to this actual login method\r\nconst Login = details => {\r\n  console.log(details); \r\n\r\n  if (details.email === adminUser.email && details.password === adminUser.password) {\r\n    console.log (\"Admin is logged in\");\r\n    setUser({\r\n      name: details.name,\r\n      email: details.email\r\n    })\r\n  } else {\r\n    console.log(\"Details do not match!\");\r\n    setError(\"Details do not match!\")\r\n  }\r\n  //Later, we'll be setting our user or our error. For now we just console.log this.\r\n}\r\n\r\n//We're gonna need also a logout function:\r\nconst Logout = () => {\r\n  setUser({\r\n    name: \"\",\r\n    email: \"\"\r\n  });\r\n}\r\n\r\n\r\n\r\nconst LoginView = () => {\r\n  return (\r\n    <>\r\n      <LoginForm />\r\n\r\n      {(user.email !== \"\")\r\n      ? (\r\n        <div className=\"welcome\">\r\n          <h2>Welcome, <span>{user.name}</span></h2>\r\n          <button onClick={Logout} className=\"btn\">Logout</button>\r\n        </div>\r\n      ) : (\r\n        <LoginForm Login={Login} error={error} />\r\n      )}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginView\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,iBADS;EAEhBC,QAAQ,EAAE;AAFM,CAAlB,C,CAIA;;AACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;EAC/BO,IAAI,EAAE,EADyB;EAE/BJ,KAAK,EAAE;AAFwB,CAAD,CAAhC,C,CAIA;;AACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,C,CAEA;AACA;;AACA,MAAMU,KAAK,GAAGC,OAAO,IAAI;EACvBC,OAAO,CAACC,GAAR,CAAYF,OAAZ;;EAEA,IAAIA,OAAO,CAACR,KAAR,KAAkBD,SAAS,CAACC,KAA5B,IAAqCQ,OAAO,CAACP,QAAR,KAAqBF,SAAS,CAACE,QAAxE,EAAkF;IAChFQ,OAAO,CAACC,GAAR,CAAa,oBAAb;IACAP,OAAO,CAAC;MACNC,IAAI,EAAEI,OAAO,CAACJ,IADR;MAENJ,KAAK,EAAEQ,OAAO,CAACR;IAFT,CAAD,CAAP;EAID,CAND,MAMO;IACLS,OAAO,CAACC,GAAR,CAAY,uBAAZ;IACAJ,QAAQ,CAAC,uBAAD,CAAR;EACD,CAZsB,CAavB;;AACD,CAdD,C,CAgBA;;;KAhBMC,K;;AAiBN,MAAMI,MAAM,GAAG,MAAM;EACnBR,OAAO,CAAC;IACNC,IAAI,EAAE,EADA;IAENJ,KAAK,EAAE;EAFD,CAAD,CAAP;AAID,CALD;;MAAMW,M;;AASN,MAAMC,SAAS,GAAG,MAAM;EACtB,oBACE;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,EAGIV,IAAI,CAACF,KAAL,KAAe,EAAhB,gBAEC;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAA,qCAAa;UAAA,UAAOE,IAAI,CAACE;QAAZ;UAAA;UAAA;UAAA;QAAA,QAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEO,MAAjB;QAAyB,SAAS,EAAC,KAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,gBAOC,QAAC,SAAD;MAAW,KAAK,EAAEJ,KAAlB;MAAyB,KAAK,EAAEF;IAAhC;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA,gBADF;AAgBD,CAjBD;;MAAMO,S;AAmBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ihsan\\\\Lektionen\\\\6. JavaScript 3\\\\Grupp uppgift\\\\GruppC\\\\ecommerce\\\\src\\\\App.js\";\n// import React, { useState } from 'react';\nimport './App.css';\nimport './components/style.scss';\nimport Views from './Views/Views';\nimport Navbar from './components/Navbar';\nimport LoginForm from './components/LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  /*   const adminUser = {\r\n      email: \"admin@admin.com\",\r\n      password: \"admin123\"\r\n    }\r\n    // This where we get our user data. Once we've logged in this data is gonna be set.\r\n    const [user, setUser] = useState({\r\n      name: \"\",\r\n      email: \"\"\r\n    });\r\n    // Error string because what the error is gonna to is to catch if or not our details are correct. It has a message in there to dislay\r\n    const [error, setError] = useState(\"\");\r\n  \r\n    //This function is going to be called when we're to log in.\r\n    //We're gonna pass through details to this actual login method\r\n    const Login = details => {\r\n      console.log(details); \r\n  \r\n      if (details.email === adminUser.email && details.password === adminUser.password) {\r\n        console.log (\"Admin is logged in\");\r\n        setUser({\r\n          name: details.name,\r\n          email: details.email\r\n        })\r\n      } else {\r\n        console.log(\"Details do not match!\");\r\n        setError(\"Details do not match!\")\r\n      }\r\n      //Later, we'll be setting our user or our error. For now we just console.log this.\r\n    }\r\n  \r\n    //We're gonna need also a logout function:\r\n    const Logout = () => {\r\n      setUser({\r\n        name: \"\",\r\n        email: \"\"\r\n      });\r\n    }\r\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Views, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Views","Navbar","LoginForm","App"],"sources":["C:/Users/ihsan/Lektionen/6. JavaScript 3/Grupp uppgift/GruppC/ecommerce/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\nimport './App.css';\r\nimport './components/style.scss';\r\nimport Views from './Views/Views';\r\nimport Navbar from './components/Navbar';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nfunction App() {\r\n/*   const adminUser = {\r\n    email: \"admin@admin.com\",\r\n    password: \"admin123\"\r\n  }\r\n  // This where we get our user data. Once we've logged in this data is gonna be set.\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\"\r\n  });\r\n  // Error string because what the error is gonna to is to catch if or not our details are correct. It has a message in there to dislay\r\n  const [error, setError] = useState(\"\");\r\n\r\n  //This function is going to be called when we're to log in.\r\n  //We're gonna pass through details to this actual login method\r\n  const Login = details => {\r\n    console.log(details); \r\n\r\n    if (details.email === adminUser.email && details.password === adminUser.password) {\r\n      console.log (\"Admin is logged in\");\r\n      setUser({\r\n        name: details.name,\r\n        email: details.email\r\n      })\r\n    } else {\r\n      console.log(\"Details do not match!\");\r\n      setError(\"Details do not match!\")\r\n    }\r\n    //Later, we'll be setting our user or our error. For now we just console.log this.\r\n  }\r\n\r\n  //We're gonna need also a logout function:\r\n  const Logout = () => {\r\n    setUser({\r\n      name: \"\",\r\n      email: \"\"\r\n    });\r\n  }\r\n */\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Views />\r\n\r\n{/*       {(user.email !== \"\")\r\n      ? (\r\n        <div className=\"welcome\">\r\n          <h2>Welcome, <span>{user.name}</span></h2>\r\n          <button onClick={Logout} className=\"btn\">Logout</button>\r\n        </div>\r\n      ) : (\r\n        <LoginForm Login={Login} error={error} />\r\n      )} */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;AACA,OAAO,WAAP;AACA,OAAO,yBAAP;AACA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;EACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;KAxDQA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}